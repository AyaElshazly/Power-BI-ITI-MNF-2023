<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>411, 17</value>
  </metadata>
  <metadata name="backgroundWorker2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>608, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        k9C1G09S1XtamRsifxtTwTtaqbV+SFa5ThLebFfm5RhVnD2u5+YUX8vg9Np705Q1F/i1dZdcyeTn3gzW
        p3SXkUicmdvVHVVRmRNhTdNObIQAWKwR6Jpds/rSFq3phodt49Xb2hMDNVAKm2j30vnycylOc3TUaY6Q
        1yGQAAAAAAAAAAAPfcCtTFNZqQsX96Kpka9PxVemn/T0LNqf/FpNvpmL2POE9PRSAPIsPtTEv+jpEX99
        FlkVP9uJGp/3j/seN76Np8NicapejXPzCi/l8HptPSnKFC/xausuuZPJz7wZrU7pLyKROTO3qjqqozIm
        wpumnNkIALFYI9E0u2f1pC1b0w0O28ert7QmBmqgFTbR76Xz5OZSnObpqNMdIa5DIAAAAAAAAAAAEmuH
        e+oulMsqIr6eTEk8aZVRMjm4+zpJjXbk/Ezoq+WVfadni9Th9Yye7WTfK7trN+2pKqFOzta9yRuTa1+J
        SxFcS0tez3KJwmGpeC/93bDaqvmZLJi/diiVHqq/LGqdjdqkVVxDK1st25P+R/14Fea3au8dQ+0q7F0n
        Jia1MjWJ/C1P7rtVVUrVTjOLeWbUWqYphY+5+YUX8vg9NpapyhoL/Fq6y65k8nPvBmtTukvIpE5M7eqO
        qqjMibCm6ac2QgAsVgj0TS7Z/WkLVvTDQ7bx6u3tCYGaqAVNtHvpfPk5lKc5umo0x0hrkMgDvXEs2kti
        vp7PtBquhke9Htxq3GiMc5O1uJU7WoZURjOEvDaa5otTVTm9p6rrn6s7jS/mPfd0tT42/wCr8R+jquuf
        qzuNN+Ynd0njb/q/Efp4DaUTKeaaCLsayokY1Mv7qOVE7Vy5EK05t3RONMTPJrEMgCS4OrJorcr4rPtN
        qvheyRXNRzm9rWqqdrVRcqGdERM4Sr7Vcqt2pqpzexdV1z9WdxpvzHtu6Wq8bf8AV+I/R1XXP1Z3Gm/M
        Tu6Txt/1fiP0dV1z9XdxpvzDd0njb/q/EfoXBZc5ctM7jS/mI3VPI8df9X4gTBbc9MlM7jS/mG7pPHX/
        AFfiDquufqzuNN+Ybuk8bf8AV+I/SWUVLDQxso6ZMUcUbY2JjVcTGp0WpjXtXsRDOIwVaqpqmZn6vuSh
        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
        QgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf//Z
</value>
  </data>
</root>